<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\release\output\rf_module.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\release\output\rf_module.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5050106: Last Updated: Tue Aug 25 13:32:38 2015
<BR><P>
<H3>Maximum Stack Usage =          0 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>

<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[5]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5]">HardFault_Handler</a><BR>
 <LI><a href="#[6]">MemManage_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6]">MemManage_Handler</a><BR>
 <LI><a href="#[7]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7]">BusFault_Handler</a><BR>
 <LI><a href="#[8]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8]">UsageFault_Handler</a><BR>
 <LI><a href="#[1f]">ADC1_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1f]">ADC1_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[1f]">ADC1_IRQHandler</a> from startup_stm32f10x_md_vl.o(.text) referenced from startup_stm32f10x_md_vl.o(RESET)
 <LI><a href="#[7]">BusFault_Handler</a> from stm32f10x_it.o(.text) referenced from startup_stm32f10x_md_vl.o(RESET)
 <LI><a href="#[33]">CEC_IRQHandler</a> from startup_stm32f10x_md_vl.o(.text) referenced from startup_stm32f10x_md_vl.o(RESET)
 <LI><a href="#[18]">DMA1_Channel1_IRQHandler</a> from startup_stm32f10x_md_vl.o(.text) referenced from startup_stm32f10x_md_vl.o(RESET)
 <LI><a href="#[19]">DMA1_Channel2_IRQHandler</a> from startup_stm32f10x_md_vl.o(.text) referenced from startup_stm32f10x_md_vl.o(RESET)
 <LI><a href="#[1a]">DMA1_Channel3_IRQHandler</a> from startup_stm32f10x_md_vl.o(.text) referenced from startup_stm32f10x_md_vl.o(RESET)
 <LI><a href="#[1b]">DMA1_Channel4_IRQHandler</a> from startup_stm32f10x_md_vl.o(.text) referenced from startup_stm32f10x_md_vl.o(RESET)
 <LI><a href="#[1c]">DMA1_Channel5_IRQHandler</a> from startup_stm32f10x_md_vl.o(.text) referenced from startup_stm32f10x_md_vl.o(RESET)
 <LI><a href="#[1d]">DMA1_Channel6_IRQHandler</a> from startup_stm32f10x_md_vl.o(.text) referenced from startup_stm32f10x_md_vl.o(RESET)
 <LI><a href="#[1e]">DMA1_Channel7_IRQHandler</a> from startup_stm32f10x_md_vl.o(.text) referenced from startup_stm32f10x_md_vl.o(RESET)
 <LI><a href="#[a]">DebugMon_Handler</a> from stm32f10x_it.o(.text) referenced from startup_stm32f10x_md_vl.o(RESET)
 <LI><a href="#[13]">EXTI0_IRQHandler</a> from startup_stm32f10x_md_vl.o(.text) referenced from startup_stm32f10x_md_vl.o(RESET)
 <LI><a href="#[31]">EXTI15_10_IRQHandler</a> from startup_stm32f10x_md_vl.o(.text) referenced from startup_stm32f10x_md_vl.o(RESET)
 <LI><a href="#[14]">EXTI1_IRQHandler</a> from startup_stm32f10x_md_vl.o(.text) referenced from startup_stm32f10x_md_vl.o(RESET)
 <LI><a href="#[15]">EXTI2_IRQHandler</a> from startup_stm32f10x_md_vl.o(.text) referenced from startup_stm32f10x_md_vl.o(RESET)
 <LI><a href="#[16]">EXTI3_IRQHandler</a> from startup_stm32f10x_md_vl.o(.text) referenced from startup_stm32f10x_md_vl.o(RESET)
 <LI><a href="#[17]">EXTI4_IRQHandler</a> from startup_stm32f10x_md_vl.o(.text) referenced from startup_stm32f10x_md_vl.o(RESET)
 <LI><a href="#[20]">EXTI9_5_IRQHandler</a> from startup_stm32f10x_md_vl.o(.text) referenced from startup_stm32f10x_md_vl.o(RESET)
 <LI><a href="#[11]">FLASH_IRQHandler</a> from startup_stm32f10x_md_vl.o(.text) referenced from startup_stm32f10x_md_vl.o(RESET)
 <LI><a href="#[5]">HardFault_Handler</a> from stm32f10x_it.o(.text) referenced from startup_stm32f10x_md_vl.o(RESET)
 <LI><a href="#[29]">I2C1_ER_IRQHandler</a> from startup_stm32f10x_md_vl.o(.text) referenced from startup_stm32f10x_md_vl.o(RESET)
 <LI><a href="#[28]">I2C1_EV_IRQHandler</a> from user_i2c.o(.text) referenced from startup_stm32f10x_md_vl.o(RESET)
 <LI><a href="#[2b]">I2C2_ER_IRQHandler</a> from startup_stm32f10x_md_vl.o(.text) referenced from startup_stm32f10x_md_vl.o(RESET)
 <LI><a href="#[2a]">I2C2_EV_IRQHandler</a> from user_i2c.o(.text) referenced from startup_stm32f10x_md_vl.o(RESET)
 <LI><a href="#[6]">MemManage_Handler</a> from stm32f10x_it.o(.text) referenced from startup_stm32f10x_md_vl.o(RESET)
 <LI><a href="#[4]">NMI_Handler</a> from stm32f10x_it.o(.text) referenced from startup_stm32f10x_md_vl.o(RESET)
 <LI><a href="#[e]">PVD_IRQHandler</a> from startup_stm32f10x_md_vl.o(.text) referenced from startup_stm32f10x_md_vl.o(RESET)
 <LI><a href="#[b]">PendSV_Handler</a> from stm32f10x_it.o(.text) referenced from startup_stm32f10x_md_vl.o(RESET)
 <LI><a href="#[12]">RCC_IRQHandler</a> from startup_stm32f10x_md_vl.o(.text) referenced from startup_stm32f10x_md_vl.o(RESET)
 <LI><a href="#[32]">RTCAlarm_IRQHandler</a> from startup_stm32f10x_md_vl.o(.text) referenced from startup_stm32f10x_md_vl.o(RESET)
 <LI><a href="#[10]">RTC_IRQHandler</a> from startup_stm32f10x_md_vl.o(.text) referenced from startup_stm32f10x_md_vl.o(RESET)
 <LI><a href="#[3]">Reset_Handler</a> from startup_stm32f10x_md_vl.o(.text) referenced from startup_stm32f10x_md_vl.o(RESET)
 <LI><a href="#[2c]">SPI1_IRQHandler</a> from startup_stm32f10x_md_vl.o(.text) referenced from startup_stm32f10x_md_vl.o(RESET)
 <LI><a href="#[2d]">SPI2_IRQHandler</a> from startup_stm32f10x_md_vl.o(.text) referenced from startup_stm32f10x_md_vl.o(RESET)
 <LI><a href="#[9]">SVC_Handler</a> from stm32f10x_it.o(.text) referenced from startup_stm32f10x_md_vl.o(RESET)
 <LI><a href="#[c]">SysTick_Handler</a> from stm32f10x_it.o(.text) referenced from startup_stm32f10x_md_vl.o(RESET)
 <LI><a href="#[3b]">SystemInit</a> from system_stm32f10x.o(.text) referenced from startup_stm32f10x_md_vl.o(.text)
 <LI><a href="#[f]">TAMPER_IRQHandler</a> from startup_stm32f10x_md_vl.o(.text) referenced from startup_stm32f10x_md_vl.o(RESET)
 <LI><a href="#[21]">TIM1_BRK_TIM15_IRQHandler</a> from startup_stm32f10x_md_vl.o(.text) referenced from startup_stm32f10x_md_vl.o(RESET)
 <LI><a href="#[24]">TIM1_CC_IRQHandler</a> from startup_stm32f10x_md_vl.o(.text) referenced from startup_stm32f10x_md_vl.o(RESET)
 <LI><a href="#[23]">TIM1_TRG_COM_TIM17_IRQHandler</a> from startup_stm32f10x_md_vl.o(.text) referenced from startup_stm32f10x_md_vl.o(RESET)
 <LI><a href="#[22]">TIM1_UP_TIM16_IRQHandler</a> from user_timer.o(.text) referenced from startup_stm32f10x_md_vl.o(RESET)
 <LI><a href="#[25]">TIM2_IRQHandler</a> from startup_stm32f10x_md_vl.o(.text) referenced from startup_stm32f10x_md_vl.o(RESET)
 <LI><a href="#[26]">TIM3_IRQHandler</a> from startup_stm32f10x_md_vl.o(.text) referenced from startup_stm32f10x_md_vl.o(RESET)
 <LI><a href="#[27]">TIM4_IRQHandler</a> from startup_stm32f10x_md_vl.o(.text) referenced from startup_stm32f10x_md_vl.o(RESET)
 <LI><a href="#[34]">TIM6_DAC_IRQHandler</a> from startup_stm32f10x_md_vl.o(.text) referenced from startup_stm32f10x_md_vl.o(RESET)
 <LI><a href="#[35]">TIM7_IRQHandler</a> from startup_stm32f10x_md_vl.o(.text) referenced from startup_stm32f10x_md_vl.o(RESET)
 <LI><a href="#[37]">TaskControl</a> from rf_control.o(.text) referenced from main.o(.text)
 <LI><a href="#[38]">TaskDebug</a> from main.o(.text) referenced from main.o(.text)
 <LI><a href="#[36]">TaskParameter</a> from rf_parameter.o(.text) referenced from main.o(.text)
 <LI><a href="#[39]">TaskProtocol</a> from rf_protocol.o(.text) referenced from main.o(.text)
 <LI><a href="#[3a]">TaskWatchdog</a> from main.o(.text) referenced from main.o(.text)
 <LI><a href="#[2e]">USART1_IRQHandler</a> from user_uart.o(.text) referenced from startup_stm32f10x_md_vl.o(RESET)
 <LI><a href="#[2f]">USART2_IRQHandler</a> from user_uart.o(.text) referenced from startup_stm32f10x_md_vl.o(RESET)
 <LI><a href="#[30]">USART3_IRQHandler</a> from startup_stm32f10x_md_vl.o(.text) referenced from startup_stm32f10x_md_vl.o(RESET)
 <LI><a href="#[8]">UsageFault_Handler</a> from stm32f10x_it.o(.text) referenced from startup_stm32f10x_md_vl.o(RESET)
 <LI><a href="#[d]">WWDG_IRQHandler</a> from startup_stm32f10x_md_vl.o(.text) referenced from startup_stm32f10x_md_vl.o(RESET)
 <LI><a href="#[47]">__main</a> from __main.o(!!!main) referenced from startup_stm32f10x_md_vl.o(.text)
 <LI><a href="#[3f]">execALC</a> from rf_control.o(.text) referenced from rf_control.o(.constdata)
 <LI><a href="#[3e]">execAtt1Set</a> from rf_control.o(.text) referenced from rf_control.o(.constdata)
 <LI><a href="#[44]">execFWEnter</a> from rf_protocol.o(.text) referenced from rf_control.o(.constdata)
 <LI><a href="#[45]">execFWLoad</a> from rf_protocol.o(.text) referenced from rf_control.o(.constdata)
 <LI><a href="#[46]">execFWReboot</a> from rf_protocol.o(.text) referenced from rf_control.o(.constdata)
 <LI><a href="#[43]">execRFParamQ</a> from rf_protocol.o(.text) referenced from rf_control.o(.constdata)
 <LI><a href="#[42]">execRFSW</a> from rf_control.o(.text) referenced from rf_control.o(.constdata)
 <LI><a href="#[3d]">execSwitchSource</a> from rf_control.o(.text) referenced from rf_control.o(.constdata)
 <LI><a href="#[40]">execVCO</a> from rf_control.o(.text) referenced from rf_control.o(.constdata)
 <LI><a href="#[41]">execVCOLim</a> from rf_control.o(.text) referenced from rf_control.o(.constdata)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[47]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[6b]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[6d]"></a>__scatterload_rt2</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[6e]"></a>__scatterload_copy</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, __scatter_copy.o(!!handler_copy), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>

<P><STRONG><a name="[72]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[77]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[6c]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, __rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
</UL>

<P><STRONG><a name="[6f]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, __rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[71]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[73]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[11b]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[76]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[78]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[74]"></a>main</STRONG> (Thumb, 132 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskTimerRoutine
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_LSICmd
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetFlagStatus
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_ClearFlag
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitTaskTimer
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitTaskControl
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitTarget
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitProtocol
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitParam
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_WriteAccessCmd
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_SetReload
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_SetPrescaler
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_ReloadCounter
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_Enable
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddTaskTimer
</UL>
<BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[9f]"></a>GetTable</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, rf_control.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;execAnaylize
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitParam
</UL>

<P><STRONG><a name="[a1]"></a>GetTableMebCnt</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, rf_control.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;execAnaylize
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitParam
</UL>

<P><STRONG><a name="[84]"></a>WritePLL</STRONG> (Thumb, 176 bytes, Stack size 0 bytes, rf_control.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteSpiOneWord
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;execVCOLim
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;execRFSW
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;execVCO
</UL>

<P><STRONG><a name="[86]"></a>WriteAD5324</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, rf_control.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteSpiOneWord
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;execVCOLim
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;execALC
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitTaskControl
</UL>

<P><STRONG><a name="[87]"></a>ReadPowerADC</STRONG> (Thumb, 82 bytes, Stack size 0 bytes, rf_control.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadAdcValue
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskControl
</UL>

<P><STRONG><a name="[3e]"></a>execAtt1Set</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, rf_control.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WritePe4302
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rf_control.o(.constdata)
</UL>
<P><STRONG><a name="[3d]"></a>execSwitchSource</STRONG> (Thumb, 80 bytes, Stack size 0 bytes, rf_control.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_WriteBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rf_control.o(.constdata)
</UL>
<P><STRONG><a name="[3f]"></a>execALC</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, rf_control.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteAD5324
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rf_control.o(.constdata)
</UL>
<P><STRONG><a name="[40]"></a>execVCO</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, rf_control.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WritePLL
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rf_control.o(.constdata)
</UL>
<P><STRONG><a name="[42]"></a>execRFSW</STRONG> (Thumb, 166 bytes, Stack size 0 bytes, rf_control.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserTimerReset
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserTimerOver
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_WriteBit
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WritePLL
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rf_control.o(.constdata)
</UL>
<P><STRONG><a name="[41]"></a>execVCOLim</STRONG> (Thumb, 86 bytes, Stack size 0 bytes, rf_control.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteE2prom
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteAD5324
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WritePLL
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rf_control.o(.constdata)
</UL>
<P><STRONG><a name="[7d]"></a>InitTaskControl</STRONG> (Thumb, 116 bytes, Stack size 0 bytes, rf_control.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WritePe4302
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_WriteBit
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteAD5324
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[37]"></a>TaskControl</STRONG> (Thumb, 236 bytes, Stack size 0 bytes, rf_control.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadInternalTemperatureSensor
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_WriteBit
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadPowerADC
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.text)
</UL>
<P><STRONG><a name="[90]"></a>CalcCRC16Value</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, rf_protocol.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalcFirmwareAllCRC16
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalcFirmwareBufCRC16
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReturnResetFlag
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReturnUpgradeFlag
</UL>

<P><STRONG><a name="[94]"></a>HdlcConvertData</STRONG> (Thumb, 168 bytes, Stack size 0 bytes, rf_protocol.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReturnResetFlag
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReturnUpgradeFlag
</UL>

<P><STRONG><a name="[92]"></a>ReturnUpgradeFlag</STRONG> (Thumb, 94 bytes, Stack size 0 bytes, rf_protocol.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartTxOpen
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetUartBufInfo
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HdlcConvertData
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalcCRC16Value
</UL>

<P><STRONG><a name="[96]"></a>ReturnResetFlag</STRONG> (Thumb, 88 bytes, Stack size 0 bytes, rf_protocol.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartTxOpen
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetUartBufInfo
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HdlcConvertData
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalcCRC16Value
</UL>

<P><STRONG><a name="[97]"></a>sendInitpacket</STRONG> (Thumb, 98 bytes, Stack size 0 bytes, rf_protocol.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartTxOpen
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitUartIAP
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitUart
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetUartBufInfo
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteE2prom
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserTimerReset
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserTimerOver
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitProtocol
</UL>

<P><STRONG><a name="[43]"></a>execRFParamQ</STRONG> (Thumb, 306 bytes, Stack size 0 bytes, rf_protocol.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadE2prom
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rf_control.o(.constdata)
</UL>
<P><STRONG><a name="[44]"></a>execFWEnter</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, rf_protocol.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EndCode2Flash
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteE2prom
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rf_control.o(.constdata)
</UL>
<P><STRONG><a name="[45]"></a>execFWLoad</STRONG> (Thumb, 168 bytes, Stack size 0 bytes, rf_protocol.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitCode2Flash
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Code2Flash
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rf_control.o(.constdata)
</UL>
<P><STRONG><a name="[46]"></a>execFWReboot</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, rf_protocol.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> rf_control.o(.constdata)
</UL>
<P><STRONG><a name="[9e]"></a>execAnaylize</STRONG> (Thumb, 232 bytes, Stack size 0 bytes, rf_protocol.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteE2prom
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTableMebCnt
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTable
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMAPktHandle
</UL>

<P><STRONG><a name="[a4]"></a>ProcSetLoadStart</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, rf_protocol.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitCode2Flash
</UL>

<P><STRONG><a name="[a5]"></a>ProcSetLoading</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, rf_protocol.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Code2Flash
</UL>

<P><STRONG><a name="[a6]"></a>ProcSetLoadingPrev</STRONG> (Thumb, 78 bytes, Stack size 0 bytes, rf_protocol.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Code2Flash
</UL>

<P><STRONG><a name="[a7]"></a>ProcSetLoadEndPrev</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, rf_protocol.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EndCode2FlashRrev
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalcFirmwareBufCRC16
</UL>

<P><STRONG><a name="[aa]"></a>ProcSetLoadEnd</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, rf_protocol.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EndCode2Flash
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalcFirmwareBufCRC16
</UL>

<P><STRONG><a name="[7c]"></a>InitProtocol</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, rf_protocol.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitUartBuf
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendInitpacket
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[39]"></a>TaskProtocol</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, rf_protocol.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMAPktHandle
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.text)
</UL>
<P><STRONG><a name="[ae]"></a>FirmwareVerify</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, rf_parameter.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FirmwareIsExist
</UL>

<P><STRONG><a name="[ac]"></a>FirmwareIsExist</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, rf_parameter.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Section2Bak
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bak2Section
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FirmwareVerify
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SystemReset
</UL>

<P><STRONG><a name="[b1]"></a>CalcFirmwareAllCRC16</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, rf_parameter.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalcCRC16Value
</UL>

<P><STRONG><a name="[a8]"></a>CalcFirmwareBufCRC16</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, rf_parameter.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalcCRC16Value
</UL>
<BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcSetLoadEnd
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcSetLoadEndPrev
</UL>

<P><STRONG><a name="[b2]"></a>DownFlagSet</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, rf_parameter.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteE2prom
</UL>
<BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EndCode2FlashRrev
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Code2Flash
</UL>

<P><STRONG><a name="[b3]"></a>DownFlagCheck</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, rf_parameter.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteE2prom
</UL>

<P><STRONG><a name="[b4]"></a>RebootFlagCheck</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, rf_parameter.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteE2prom
</UL>

<P><STRONG><a name="[b5]"></a>RebootFlagSet</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, rf_parameter.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteE2prom
</UL>

<P><STRONG><a name="[7b]"></a>InitParam</STRONG> (Thumb, 72 bytes, Stack size 0 bytes, rf_parameter.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadE2prom
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTableMebCnt
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTable
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[36]"></a>TaskParameter</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, rf_parameter.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> main.o(.text)
</UL>
<P><STRONG><a name="[81]"></a>AddTaskTimer</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserTimerReset
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[82]"></a>InitTaskTimer</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserTimerReset
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[83]"></a>TaskTimerRoutine</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserTimerReset
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserTimerOver
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[7a]"></a>InitTarget</STRONG> (Thumb, 156 bytes, Stack size 0 bytes, target.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_PCLK1Config
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_PriorityGroupConfig
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitTimer
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitI2c
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitAdc
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinRemapConfig
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitUart
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md_vl.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md_vl.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md_vl.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md_vl.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md_vl.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md_vl.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md_vl.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md_vl.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md_vl.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>SystemInit</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, system_stm32f10x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md_vl.o(.text)
</UL>
<P><STRONG><a name="[85]"></a>WriteSpiOneWord</STRONG> (Thumb, 122 bytes, Stack size 0 bytes, dev_spi.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usdelay
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EndSpiBus
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartSpiBus
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteGpioPin
</UL>
<BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WritePe4302
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteAD5324
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WritePLL
</UL>

<P><STRONG><a name="[8a]"></a>WritePe4302</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, dev_att.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteSpiOneWord
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;execAtt1Set
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitTaskControl
</UL>

<P><STRONG><a name="[8e]"></a>WriteE2prom</STRONG> (Thumb, 104 bytes, Stack size 0 bytes, dev_e2prom.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2cWriteDevice
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usdelay
</UL>
<BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RebootFlagSet
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RebootFlagCheck
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DownFlagCheck
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DownFlagSet
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;execAnaylize
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendInitpacket
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMAPktHandle
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;execFWEnter
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;execVCOLim
</UL>

<P><STRONG><a name="[9a]"></a>ReadE2prom</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, dev_e2prom.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2cReadDevice
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;execRFParamQ
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitParam
</UL>

<P><STRONG><a name="[8f]"></a>ReadInternalTemperatureSensor</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, dev_temp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadAdcTemperature
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskControl
</UL>

<P><STRONG><a name="[c7]"></a>ReadExternalTemperatureSensor</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, dev_temp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2cReadDevice
</UL>

<P><STRONG><a name="[bf]"></a>InitTimer</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, user_timer.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TimeBaseInit
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitTarget
</UL>

<P><STRONG><a name="[ca]"></a>InitTIM1</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, user_timer.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TimeBaseStructInit
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TimeBaseInit
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ITConfig
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ARRPreloadConfig
</UL>

<P><STRONG><a name="[8c]"></a>UserTimerReset</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, user_timer.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_GetCounter
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_IRQHandler
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendInitpacket
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMAPktHandle
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;execRFSW
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskTimerRoutine
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitTaskTimer
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddTaskTimer
</UL>

<P><STRONG><a name="[8d]"></a>UserTimerOver</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, user_timer.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_GetCounter
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_IRQHandler
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendInitpacket
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMAPktHandle
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;execRFSW
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskTimerRoutine
</UL>

<P><STRONG><a name="[22]"></a>TIM1_UP_TIM16_IRQHandler</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, user_timer.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_GetITStatus
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ClearITPendingBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md_vl.o(RESET)
</UL>
<P><STRONG><a name="[bd]"></a>InitAdc</STRONG> (Thumb, 108 bytes, Stack size 0 bytes, user_adc.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_StartCalibration
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_ResetCalibration
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_RegularChannelConfig
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Init
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_GetResetCalibrationStatus
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_GetCalibrationStatus
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitTarget
</UL>

<P><STRONG><a name="[88]"></a>ReadAdcValue</STRONG> (Thumb, 96 bytes, Stack size 0 bytes, user_adc.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_SoftwareStartConvCmd
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_RegularChannelConfig
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_GetFlagStatus
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_GetConversionValue
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadPowerADC
</UL>

<P><STRONG><a name="[c6]"></a>ReadAdcTemperature</STRONG> (Thumb, 150 bytes, Stack size 0 bytes, user_adc.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_TempSensorVrefintCmd
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_SoftwareStartConvCmd
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_RegularChannelConfig
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_GetFlagStatus
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_GetConversionValue
</UL>
<BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadInternalTemperatureSensor
</UL>

<P><STRONG><a name="[28]"></a>I2C1_EV_IRQHandler</STRONG> (Thumb, 246 bytes, Stack size 0 bytes, user_i2c.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_SendData
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ReceiveData
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GetLastEvent
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GetITStatus
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GenerateSTOP
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ClearITPendingBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md_vl.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>I2C2_EV_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, user_i2c.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md_vl.o(RESET)
</UL>
<P><STRONG><a name="[c5]"></a>I2cReadDevice</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, user_i2c.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2cMasterRead
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2cMasterWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadExternalTemperatureSensor
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadE2prom
</UL>

<P><STRONG><a name="[c4]"></a>I2cWriteDevice</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, user_i2c.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2cMasterWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteE2prom
</UL>

<P><STRONG><a name="[be]"></a>InitI2c</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, user_i2c.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Init
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_DeInit
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitTarget
</UL>

<P><STRONG><a name="[ab]"></a>InitUartBuf</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, user_uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitProtocol
</UL>

<P><STRONG><a name="[a3]"></a>ResetUartBuf</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, user_uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_IRQHandler
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMAPktHandle
</UL>

<P><STRONG><a name="[93]"></a>GetUartBufInfo</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, user_uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendInitpacket
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReturnResetFlag
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReturnUpgradeFlag
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMAPktHandle
</UL>

<P><STRONG><a name="[99]"></a>InitUart</STRONG> (Thumb, 108 bytes, Stack size 0 bytes, user_uart.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ITConfig
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Cmd
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ClearITPendingBit
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_IRQHandler
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendInitpacket
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMAPktHandle
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitTarget
</UL>

<P><STRONG><a name="[2e]"></a>USART1_IRQHandler</STRONG> (Thumb, 146 bytes, Stack size 0 bytes, user_uart.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendData
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ReceiveData
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetITStatus
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ClearITPendingBit
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartBufDataOut
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartBufDataIn
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetUartBuf
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitUart
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserTimerReset
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserTimerOver
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md_vl.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>USART2_IRQHandler</STRONG> (Thumb, 144 bytes, Stack size 0 bytes, user_uart.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendData
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ReceiveData
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetITStatus
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ClearITPendingBit
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartBufDataOut
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartBufDataIn
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetUartBuf
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitUart
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserTimerReset
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserTimerOver
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md_vl.o(RESET)
</UL>
<P><STRONG><a name="[fd]"></a>UartSendStr</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, user_uart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendData
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetFlagStatus
</UL>

<P><STRONG><a name="[98]"></a>InitUartIAP</STRONG> (Thumb, 108 bytes, Stack size 0 bytes, user_uart.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ITConfig
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Cmd
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ClearITPendingBit
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendInitpacket
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMAPktHandle
</UL>

<P><STRONG><a name="[95]"></a>UartTxOpen</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, user_uart.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendData
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartBufDataOut
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendInitpacket
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReturnResetFlag
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReturnUpgradeFlag
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMAPktHandle
</UL>

<P><STRONG><a name="[9d]"></a>Code2Flash</STRONG> (Thumb, 400 bytes, Stack size 0 bytes, user_flash.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Unlock
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ProgramWord
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Lock
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ErasePage
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ClearFlag
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bootloader
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DownFlagSet
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitCode2Flash
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EndCode2Flash
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcSetLoadingPrev
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcSetLoading
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMAPktHandle
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;execFWLoad
</UL>

<P><STRONG><a name="[9b]"></a>EndCode2Flash</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, user_flash.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Code2Flash
</UL>
<BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcSetLoadEnd
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMAPktHandle
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;execFWEnter
</UL>

<P><STRONG><a name="[9c]"></a>InitCode2Flash</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, user_flash.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Code2Flash
</UL>
<BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcSetLoadStart
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMAPktHandle
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;execFWLoad
</UL>

<P><STRONG><a name="[ad]"></a>Section2Bak</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, user_flash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash2Section
</UL>
<BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FirmwareIsExist
</UL>

<P><STRONG><a name="[af]"></a>Bak2Section</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, user_flash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash2Section
</UL>
<BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FirmwareIsExist
</UL>

<P><STRONG><a name="[a9]"></a>EndCode2FlashRrev</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, user_flash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SystemReset
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash2Section
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DownFlagSet
</UL>
<BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcSetLoadEndPrev
</UL>

<P><STRONG><a name="[b9]"></a>NVIC_PriorityGroupConfig</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, misc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitTarget
</UL>

<P><STRONG><a name="[ba]"></a>NVIC_Init</STRONG> (Thumb, 94 bytes, Stack size 0 bytes, misc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitTarget
</UL>

<P><STRONG><a name="[101]"></a>ADC_DeInit</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, stm32f10x_adc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphResetCmd
</UL>

<P><STRONG><a name="[d1]"></a>ADC_Init</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, stm32f10x_adc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitAdc
</UL>

<P><STRONG><a name="[d3]"></a>ADC_Cmd</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f10x_adc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitAdc
</UL>

<P><STRONG><a name="[d4]"></a>ADC_ResetCalibration</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f10x_adc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitAdc
</UL>

<P><STRONG><a name="[d5]"></a>ADC_GetResetCalibrationStatus</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f10x_adc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitAdc
</UL>

<P><STRONG><a name="[d6]"></a>ADC_StartCalibration</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f10x_adc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitAdc
</UL>

<P><STRONG><a name="[d7]"></a>ADC_GetCalibrationStatus</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f10x_adc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitAdc
</UL>

<P><STRONG><a name="[d8]"></a>ADC_SoftwareStartConvCmd</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f10x_adc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadAdcTemperature
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadAdcValue
</UL>

<P><STRONG><a name="[d2]"></a>ADC_RegularChannelConfig</STRONG> (Thumb, 116 bytes, Stack size 0 bytes, stm32f10x_adc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadAdcTemperature
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitAdc
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadAdcValue
</UL>

<P><STRONG><a name="[da]"></a>ADC_GetConversionValue</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_adc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadAdcTemperature
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadAdcValue
</UL>

<P><STRONG><a name="[db]"></a>ADC_TempSensorVrefintCmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_adc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadAdcTemperature
</UL>

<P><STRONG><a name="[d9]"></a>ADC_GetFlagStatus</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f10x_adc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadAdcTemperature
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadAdcValue
</UL>

<P><STRONG><a name="[103]"></a>GPIO_DeInit</STRONG> (Thumb, 152 bytes, Stack size 0 bytes, stm32f10x_gpio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphResetCmd
</UL>

<P><STRONG><a name="[104]"></a>GPIO_AFIODeInit</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f10x_gpio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphResetCmd
</UL>

<P><STRONG><a name="[bc]"></a>GPIO_Init</STRONG> (Thumb, 156 bytes, Stack size 0 bytes, stm32f10x_gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitTarget
</UL>

<P><STRONG><a name="[89]"></a>GPIO_ReadInputDataBit</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f10x_gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;execRFSW
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadPowerADC
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskControl
</UL>

<P><STRONG><a name="[8b]"></a>GPIO_WriteBit</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f10x_gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteGpioPin
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;execRFSW
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;execSwitchSource
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskControl
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitTaskControl
</UL>

<P><STRONG><a name="[bb]"></a>GPIO_PinRemapConfig</STRONG> (Thumb, 82 bytes, Stack size 0 bytes, stm32f10x_gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitTarget
</UL>

<P><STRONG><a name="[ef]"></a>I2C_DeInit</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, stm32f10x_i2c.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphResetCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitI2c
</UL>

<P><STRONG><a name="[f1]"></a>I2C_Init</STRONG> (Thumb, 178 bytes, Stack size 0 bytes, stm32f10x_i2c.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetClocksFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitI2c
</UL>

<P><STRONG><a name="[f0]"></a>I2C_Cmd</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f10x_i2c.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitI2c
</UL>

<P><STRONG><a name="[eb]"></a>I2C_GenerateSTART</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f10x_i2c.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2cMasterRead
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2cMasterWrite
</UL>

<P><STRONG><a name="[e6]"></a>I2C_GenerateSTOP</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f10x_i2c.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C1_EV_IRQHandler
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2cMasterRead
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2cMasterWrite
</UL>

<P><STRONG><a name="[f3]"></a>I2C_AcknowledgeConfig</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f10x_i2c.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2cMasterRead
</UL>

<P><STRONG><a name="[e9]"></a>I2C_SendData</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_i2c.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C1_EV_IRQHandler
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2cMasterWrite
</UL>

<P><STRONG><a name="[e8]"></a>I2C_ReceiveData</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_i2c.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C1_EV_IRQHandler
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2cMasterRead
</UL>

<P><STRONG><a name="[ed]"></a>I2C_Send7bitAddress</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f10x_i2c.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2cMasterRead
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2cMasterWrite
</UL>

<P><STRONG><a name="[f2]"></a>I2C_CheckEvent</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_i2c.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckEventTimeOut
</UL>

<P><STRONG><a name="[e4]"></a>I2C_GetLastEvent</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f10x_i2c.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C1_EV_IRQHandler
</UL>

<P><STRONG><a name="[e5]"></a>I2C_GetITStatus</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, stm32f10x_i2c.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C1_EV_IRQHandler
</UL>

<P><STRONG><a name="[e7]"></a>I2C_ClearITPendingBit</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_i2c.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C1_EV_IRQHandler
</UL>

<P><STRONG><a name="[7e]"></a>RCC_GetFlagStatus</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_WaitForHSEStartUp
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[107]"></a>RCC_WaitForHSEStartUp</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetFlagStatus
</UL>

<P><STRONG><a name="[b6]"></a>RCC_PCLK1Config</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitTarget
</UL>

<P><STRONG><a name="[80]"></a>RCC_LSICmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[106]"></a>RCC_GetClocksFreq</STRONG> (Thumb, 144 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Init
</UL>

<P><STRONG><a name="[b8]"></a>RCC_APB2PeriphClockCmd</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitTarget
</UL>

<P><STRONG><a name="[b7]"></a>RCC_APB1PeriphClockCmd</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitTarget
</UL>

<P><STRONG><a name="[102]"></a>RCC_APB2PeriphResetCmd</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_DeInit
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_DeInit
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_AFIODeInit
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_DeInit
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_DeInit
</UL>

<P><STRONG><a name="[105]"></a>RCC_APB1PeriphResetCmd</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_DeInit
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_DeInit
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_DeInit
</UL>

<P><STRONG><a name="[7f]"></a>RCC_ClearFlag</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[108]"></a>TIM_DeInit</STRONG> (Thumb, 304 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphResetCmd
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphResetCmd
</UL>

<P><STRONG><a name="[c8]"></a>TIM_TimeBaseInit</STRONG> (Thumb, 114 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitTIM1
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitTimer
</UL>

<P><STRONG><a name="[10f]"></a>TIM_SetIC4Prescaler</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICInit
</UL>

<P><STRONG><a name="[10e]"></a>TIM_SetIC3Prescaler</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICInit
</UL>

<P><STRONG><a name="[10d]"></a>TIM_SetIC2Prescaler</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_PWMIConfig
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICInit
</UL>

<P><STRONG><a name="[10b]"></a>TIM_SetIC1Prescaler</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_PWMIConfig
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICInit
</UL>

<P><STRONG><a name="[109]"></a>TIM_ICInit</STRONG> (Thumb, 270 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetIC1Prescaler
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetIC2Prescaler
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetIC3Prescaler
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetIC4Prescaler
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TI1_Config
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TI2_Config
</UL>

<P><STRONG><a name="[110]"></a>TIM_PWMIConfig</STRONG> (Thumb, 104 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetIC1Prescaler
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetIC2Prescaler
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TI1_Config
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TI2_Config
</UL>

<P><STRONG><a name="[cb]"></a>TIM_TimeBaseStructInit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitTIM1
</UL>

<P><STRONG><a name="[c9]"></a>TIM_Cmd</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitTIM1
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitTimer
</UL>

<P><STRONG><a name="[cd]"></a>TIM_ITConfig</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitTIM1
</UL>

<P><STRONG><a name="[112]"></a>TIM_SelectInputTrigger</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TIxExternalClockConfig
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ITRxExternalClockConfig
</UL>

<P><STRONG><a name="[111]"></a>TIM_ITRxExternalClockConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SelectInputTrigger
</UL>

<P><STRONG><a name="[113]"></a>TIM_TIxExternalClockConfig</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SelectInputTrigger
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TI1_Config
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TI2_Config
</UL>

<P><STRONG><a name="[115]"></a>TIM_ETRConfig</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ETRClockMode2Config
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ETRClockMode1Config
</UL>

<P><STRONG><a name="[114]"></a>TIM_ETRClockMode1Config</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ETRConfig
</UL>

<P><STRONG><a name="[116]"></a>TIM_ETRClockMode2Config</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ETRConfig
</UL>

<P><STRONG><a name="[cc]"></a>TIM_ARRPreloadConfig</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitTIM1
</UL>

<P><STRONG><a name="[ce]"></a>TIM_GetCounter</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserTimerReset
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserTimerOver
</UL>

<P><STRONG><a name="[cf]"></a>TIM_GetITStatus</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM1_UP_TIM16_IRQHandler
</UL>

<P><STRONG><a name="[d0]"></a>TIM_ClearITPendingBit</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM1_UP_TIM16_IRQHandler
</UL>

<P><STRONG><a name="[117]"></a>USART_DeInit</STRONG> (Thumb, 96 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphResetCmd
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphResetCmd
</UL>

<P><STRONG><a name="[f4]"></a>USART_Init</STRONG> (Thumb, 166 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetClocksFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitUartIAP
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitUart
</UL>

<P><STRONG><a name="[f7]"></a>USART_Cmd</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitUartIAP
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitUart
</UL>

<P><STRONG><a name="[f6]"></a>USART_ITConfig</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitUartIAP
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitUart
</UL>

<P><STRONG><a name="[fa]"></a>USART_SendData</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartSendStr
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_IRQHandler
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartTxOpen
</UL>

<P><STRONG><a name="[fb]"></a>USART_ReceiveData</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_IRQHandler
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
</UL>

<P><STRONG><a name="[fe]"></a>USART_GetFlagStatus</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartSendStr
</UL>

<P><STRONG><a name="[f8]"></a>USART_GetITStatus</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_IRQHandler
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
</UL>

<P><STRONG><a name="[f5]"></a>USART_ClearITPendingBit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_IRQHandler
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitUartIAP
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitUart
</UL>

<P><STRONG><a name="[3]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_stm32f10x_md_vl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md_vl.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>ADC1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md_vl.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md_vl.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>CEC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md_vl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md_vl.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>DMA1_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md_vl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md_vl.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>DMA1_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md_vl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md_vl.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>DMA1_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md_vl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md_vl.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>DMA1_Channel4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md_vl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md_vl.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>DMA1_Channel5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md_vl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md_vl.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>DMA1_Channel6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md_vl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md_vl.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>DMA1_Channel7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md_vl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md_vl.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md_vl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md_vl.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>EXTI15_10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md_vl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md_vl.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md_vl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md_vl.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>EXTI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md_vl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md_vl.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md_vl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md_vl.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md_vl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md_vl.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>EXTI9_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md_vl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md_vl.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md_vl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md_vl.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>I2C1_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md_vl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md_vl.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>I2C2_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md_vl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md_vl.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>PVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md_vl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md_vl.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md_vl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md_vl.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>RTCAlarm_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md_vl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md_vl.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md_vl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md_vl.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md_vl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md_vl.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md_vl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md_vl.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>TAMPER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md_vl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md_vl.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>TIM1_BRK_TIM15_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md_vl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md_vl.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md_vl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md_vl.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>TIM1_TRG_COM_TIM17_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md_vl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md_vl.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>TIM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md_vl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md_vl.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>TIM3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md_vl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md_vl.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>TIM4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md_vl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md_vl.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>TIM6_DAC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md_vl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md_vl.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>TIM7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md_vl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md_vl.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>USART3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md_vl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md_vl.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md_vl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md_vl.o(RESET)
</UL>
<P><STRONG><a name="[11a]"></a>__user_initial_stackheap</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md_vl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[a0]"></a>__aeabi_memcpy</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memcpy_v6.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;execAnaylize
</UL>

<P><STRONG><a name="[118]"></a>__rt_memcpy</STRONG> (Thumb, 138 bytes, Stack size 0 bytes, rt_memcpy_v6.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>

<P><STRONG><a name="[91]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memcpy_w.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalcCRC16Value
</UL>

<P><STRONG><a name="[70]"></a>__user_setup_stackheap</STRONG> (Thumb, 74 bytes, Stack size 0 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[75]"></a>exit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, exit.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[119]"></a>__user_perproc_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[79]"></a>_sys_exit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sys_exit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
</UL>

<P><STRONG><a name="[c2]"></a>usdelay</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, dev_spi.o(i.usdelay))
<BR><BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EndSpiBus
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartSpiBus
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteSpiOneWord
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteE2prom
</UL>

<P><STRONG><a name="[e2]"></a>__aeabi_d2f</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, d2f.o(x$fpl$d2f))
<BR><BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadAdcTemperature
</UL>

<P><STRONG><a name="[11c]"></a>_d2f</STRONG> (Thumb, 98 bytes, Stack size 0 bytes, d2f.o(x$fpl$d2f), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fretinf
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>

<P><STRONG><a name="[e1]"></a>__aeabi_dadd</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, daddsub_clz.o(x$fpl$dadd))
<BR><BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadAdcTemperature
</UL>

<P><STRONG><a name="[11f]"></a>_dadd</STRONG> (Thumb, 332 bytes, Stack size 0 bytes, daddsub_clz.o(x$fpl$dadd), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dretinf
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub1
</UL>

<P><STRONG><a name="[122]"></a>__fpl_dcheck_NaN1</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, dcheck1.o(x$fpl$dcheck1))
<BR><BR>[Calls]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_return_NaN
</UL>
<BR>[Called By]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
</UL>

<P><STRONG><a name="[e0]"></a>__aeabi_ddiv</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ddiv.o(x$fpl$ddiv))
<BR><BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadAdcTemperature
</UL>

<P><STRONG><a name="[124]"></a>_ddiv</STRONG> (Thumb, 552 bytes, Stack size 0 bytes, ddiv.o(x$fpl$ddiv), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dretinf
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>

<P><STRONG><a name="[dc]"></a>__aeabi_ui2d</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, dflt_clz.o(x$fpl$dfltu))
<BR><BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadAdcTemperature
</UL>

<P><STRONG><a name="[dd]"></a>__aeabi_dmul</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, dmul.o(x$fpl$dmul))
<BR><BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadAdcTemperature
</UL>

<P><STRONG><a name="[125]"></a>_dmul</STRONG> (Thumb, 332 bytes, Stack size 0 bytes, dmul.o(x$fpl$dmul), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dretinf
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>

<P><STRONG><a name="[11e]"></a>__fpl_dnaninf</STRONG> (Thumb, 156 bytes, Stack size 0 bytes, dnaninf.o(x$fpl$dnaninf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dmul
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ddiv
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_d2f
</UL>

<P><STRONG><a name="[121]"></a>__fpl_dretinf</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, dretinf.o(x$fpl$dretinf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dmul
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ddiv
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd
</UL>

<P><STRONG><a name="[df]"></a>__aeabi_drsub</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, daddsub_clz.o(x$fpl$drsb))
<BR><BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadAdcTemperature
</UL>

<P><STRONG><a name="[126]"></a>_drsb</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, daddsub_clz.o(x$fpl$drsb), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub1
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd1
</UL>

<P><STRONG><a name="[128]"></a>_dsub</STRONG> (Thumb, 464 bytes, Stack size 0 bytes, daddsub_clz.o(x$fpl$dsub), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd1
</UL>

<P><STRONG><a name="[e3]"></a>__aeabi_f2iz</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ffix.o(x$fpl$ffix))
<BR><BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadAdcTemperature
</UL>

<P><STRONG><a name="[129]"></a>_ffix</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, ffix.o(x$fpl$ffix), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fnaninf
</UL>

<P><STRONG><a name="[12a]"></a>__fpl_fnaninf</STRONG> (Thumb, 140 bytes, Stack size 0 bytes, fnaninf.o(x$fpl$fnaninf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ffix
</UL>

<P><STRONG><a name="[11d]"></a>__fpl_fretinf</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, fretinf.o(x$fpl$fretinf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_d2f
</UL>

<P><STRONG><a name="[123]"></a>__fpl_return_NaN</STRONG> (Thumb, 100 bytes, Stack size 0 bytes, retnan.o(x$fpl$retnan))
<BR><BR>[Calls]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_cmpreturn
</UL>
<BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcheck_NaN1
</UL>

<P><STRONG><a name="[de]"></a>__ARM_scalbn</STRONG> (Thumb, 92 bytes, Stack size 0 bytes, scalbn.o(x$fpl$scalbn))
<BR><BR>[Calls]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcheck_NaN1
</UL>
<BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadAdcTemperature
</UL>

<P><STRONG><a name="[12b]"></a>__fpl_cmpreturn</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, trapv.o(x$fpl$trapveneer))
<BR><BR>[Called By]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_return_NaN
</UL>

<P><STRONG><a name="[49]"></a>FLASH_SetLatency</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f10x_flash.o(.text), UNUSED, KEPT)

<P><STRONG><a name="[4a]"></a>FLASH_HalfCycleAccessCmd</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_flash.o(.text), UNUSED, KEPT)

<P><STRONG><a name="[4b]"></a>FLASH_PrefetchBufferCmd</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_flash.o(.text), UNUSED, KEPT)

<P><STRONG><a name="[4c]"></a>FLASH_Unlock</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f10x_flash.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bootloader
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash2Section
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Code2Flash
</UL>

<P><STRONG><a name="[4d]"></a>FLASH_UnlockBank1</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f10x_flash.o(.text), UNUSED, KEPT)

<P><STRONG><a name="[4e]"></a>FLASH_Lock</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f10x_flash.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bootloader
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash2Section
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Code2Flash
</UL>

<P><STRONG><a name="[4f]"></a>FLASH_LockBank1</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f10x_flash.o(.text), UNUSED, KEPT)

<P><STRONG><a name="[50]"></a>FLASH_GetBank1Status</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, stm32f10x_flash.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastBank1Operation
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>

<P><STRONG><a name="[51]"></a>FLASH_WaitForLastOperation</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, stm32f10x_flash.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_GetBank1Status
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_UserOptionByteConfig
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ReadOutProtection
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_EnableWriteProtection
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ProgramOptionByteData
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ProgramHalfWord
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_EraseOptionBytes
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_EraseAllPages
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ProgramWord
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ErasePage
</UL>

<P><STRONG><a name="[52]"></a>FLASH_ErasePage</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, stm32f10x_flash.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bootloader
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash2Section
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Code2Flash
</UL>

<P><STRONG><a name="[53]"></a>FLASH_EraseAllPages</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, stm32f10x_flash.o(.text), UNUSED, KEPT)
<BR><BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>

<P><STRONG><a name="[54]"></a>FLASH_WaitForLastBank1Operation</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, stm32f10x_flash.o(.text), UNUSED, KEPT)
<BR><BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_GetBank1Status
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_EraseAllBank1Pages
</UL>

<P><STRONG><a name="[55]"></a>FLASH_EraseAllBank1Pages</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, stm32f10x_flash.o(.text), UNUSED, KEPT)
<BR><BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastBank1Operation
</UL>

<P><STRONG><a name="[56]"></a>FLASH_GetReadOutProtectionStatus</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f10x_flash.o(.text), UNUSED, KEPT)
<BR><BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_EraseOptionBytes
</UL>

<P><STRONG><a name="[57]"></a>FLASH_EraseOptionBytes</STRONG> (Thumb, 108 bytes, Stack size 0 bytes, stm32f10x_flash.o(.text), UNUSED, KEPT)
<BR><BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_GetReadOutProtectionStatus
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>

<P><STRONG><a name="[58]"></a>FLASH_ProgramWord</STRONG> (Thumb, 72 bytes, Stack size 0 bytes, stm32f10x_flash.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bootloader
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash2Section
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Code2Flash
</UL>

<P><STRONG><a name="[59]"></a>FLASH_ProgramHalfWord</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, stm32f10x_flash.o(.text), UNUSED, KEPT)
<BR><BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>

<P><STRONG><a name="[5a]"></a>FLASH_ProgramOptionByteData</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, stm32f10x_flash.o(.text), UNUSED, KEPT)
<BR><BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>

<P><STRONG><a name="[5b]"></a>FLASH_EnableWriteProtection</STRONG> (Thumb, 158 bytes, Stack size 0 bytes, stm32f10x_flash.o(.text), UNUSED, KEPT)
<BR><BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>

<P><STRONG><a name="[5c]"></a>FLASH_ReadOutProtection</STRONG> (Thumb, 118 bytes, Stack size 0 bytes, stm32f10x_flash.o(.text), UNUSED, KEPT)
<BR><BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>

<P><STRONG><a name="[5d]"></a>FLASH_UserOptionByteConfig</STRONG> (Thumb, 92 bytes, Stack size 0 bytes, stm32f10x_flash.o(.text), UNUSED, KEPT)
<BR><BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>

<P><STRONG><a name="[5e]"></a>FLASH_GetUserOptionByte</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f10x_flash.o(.text), UNUSED, KEPT)

<P><STRONG><a name="[5f]"></a>FLASH_GetWriteProtectionOptionByte</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_flash.o(.text), UNUSED, KEPT)

<P><STRONG><a name="[60]"></a>FLASH_GetPrefetchBufferStatus</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f10x_flash.o(.text), UNUSED, KEPT)

<P><STRONG><a name="[61]"></a>FLASH_ITConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_flash.o(.text), UNUSED, KEPT)

<P><STRONG><a name="[62]"></a>FLASH_GetFlagStatus</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, stm32f10x_flash.o(.text), UNUSED, KEPT)

<P><STRONG><a name="[63]"></a>FLASH_ClearFlag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_flash.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bootloader
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash2Section
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Code2Flash
</UL>

<P><STRONG><a name="[64]"></a>FLASH_GetStatus</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, stm32f10x_flash.o(.text), UNUSED, KEPT)

<P><STRONG><a name="[65]"></a>IWDG_WriteAccessCmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_iwdg.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[66]"></a>IWDG_SetPrescaler</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_iwdg.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[67]"></a>IWDG_SetReload</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_iwdg.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[68]"></a>IWDG_ReloadCounter</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f10x_iwdg.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bootloader
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash2Section
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskWatchdog
</UL>

<P><STRONG><a name="[69]"></a>IWDG_Enable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f10x_iwdg.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[6a]"></a>IWDG_GetFlagStatus</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f10x_iwdg.o(.text), UNUSED, KEPT)

<P><STRONG><a name="[48]"></a>Bootloader</STRONG> (Thumb, 86 bytes, Stack size 0 bytes, user_flash.o(BOOTLOADER))
<BR><BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Unlock
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ProgramWord
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Lock
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ErasePage
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ClearFlag
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SystemReset
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_ReloadCounter
</UL>
<BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Code2Flash
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[3a]"></a>TaskWatchdog</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_ReloadCounter
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.text)
</UL>
<P><STRONG><a name="[38]"></a>TaskDebug</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, main.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> main.o(.text)
</UL>
<P><STRONG><a name="[a2]"></a>TMAPktHandle</STRONG> (Thumb, 604 bytes, Stack size 0 bytes, rf_protocol.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartTxOpen
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetUartBuf
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitUartIAP
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitUart
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitCode2Flash
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetUartBufInfo
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EndCode2Flash
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Code2Flash
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;execAnaylize
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteE2prom
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserTimerReset
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserTimerOver
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskProtocol
</UL>

<P><STRONG><a name="[b0]"></a>NVIC_SystemReset</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, rf_parameter.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FirmwareIsExist
</UL>

<P><STRONG><a name="[c0]"></a>WriteGpioPin</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, dev_spi.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_WriteBit
</UL>
<BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EndSpiBus
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartSpiBus
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteSpiOneWord
</UL>

<P><STRONG><a name="[c1]"></a>StartSpiBus</STRONG> (Thumb, 94 bytes, Stack size 0 bytes, dev_spi.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usdelay
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteGpioPin
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteSpiOneWord
</UL>

<P><STRONG><a name="[c3]"></a>EndSpiBus</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, dev_spi.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usdelay
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteGpioPin
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteSpiOneWord
</UL>

<P><STRONG><a name="[ea]"></a>I2cMasterWrite</STRONG> (Thumb, 182 bytes, Stack size 0 bytes, user_i2c.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_SendData
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Send7bitAddress
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GenerateSTOP
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GenerateSTART
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckEventTimeOut
</UL>
<BR>[Called By]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2cWriteDevice
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2cReadDevice
</UL>

<P><STRONG><a name="[ec]"></a>CheckEventTimeOut</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, user_i2c.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_CheckEvent
</UL>
<BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2cMasterRead
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2cMasterWrite
</UL>

<P><STRONG><a name="[ee]"></a>I2cMasterRead</STRONG> (Thumb, 160 bytes, Stack size 0 bytes, user_i2c.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Send7bitAddress
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ReceiveData
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GenerateSTOP
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GenerateSTART
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_AcknowledgeConfig
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckEventTimeOut
</UL>
<BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2cReadDevice
</UL>

<P><STRONG><a name="[fc]"></a>UartBufDataIn</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, user_uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_IRQHandler
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
</UL>

<P><STRONG><a name="[f9]"></a>UartBufDataOut</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, user_uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_IRQHandler
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartTxOpen
</UL>

<P><STRONG><a name="[ff]"></a>Flash2Section</STRONG> (Thumb, 100 bytes, Stack size 0 bytes, user_flash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Unlock
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ProgramWord
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Lock
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ErasePage
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ClearFlag
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_ReloadCounter
</UL>
<BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Section2Bak
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bak2Section
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EndCode2FlashRrev
</UL>

<P><STRONG><a name="[100]"></a>NVIC_SystemReset</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, user_flash.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bootloader
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EndCode2FlashRrev
</UL>

<P><STRONG><a name="[10c]"></a>TI2_Config</STRONG> (Thumb, 166 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TIxExternalClockConfig
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_PWMIConfig
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICInit
</UL>

<P><STRONG><a name="[10a]"></a>TI1_Config</STRONG> (Thumb, 88 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TIxExternalClockConfig
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_PWMIConfig
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICInit
</UL>

<P><STRONG><a name="[127]"></a>_dadd1</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, daddsub_clz.o(x$fpl$dadd), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drsb
</UL>

<P><STRONG><a name="[120]"></a>_dsub1</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, daddsub_clz.o(x$fpl$dsub), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drsb
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
