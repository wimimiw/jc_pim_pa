C51 COMPILER V9.51   E2PROM                                                                10/22/2013 09:07:11 PAGE 1   


C51 COMPILER V9.51, COMPILATION OF MODULE E2PROM
OBJECT MODULE PLACED IN .\OUTPUT\e2prom.obj
COMPILER INVOKED BY: C:\Program Files\Keil\C51\BIN\C51.EXE drive\e2prom.c OPTIMIZE(9,SIZE) REGFILE(.\OUTPUT\test.ORC) BR
                    -OWSE INCDIR(.\APP;.\drive;.\LPC900) DEBUG OBJECTEXTEND PRINT(.\list\e2prom.lst) TABS(2) OBJECT(.\OUTPUT\e2prom.obj)

line level    source

   1          /**-------------文件信息--------------------------------------------------------------------------------
   2          **文   件   名: e2prom.c
   3          **创   建   人: 程莺红
   4          **修   改   人: 
   5          **最后修改日期: 2006年3月31日
   6          **最 新 版  本: V1.2
   7          **描        述:对LPC938上的EEPROM进行读写操作
   8          **
   9          **--------------历史版本信息----------------------------------------------------------------------------
  10          ** 创建人: 程莺红 
  11          ** 版  本: V1.2
  12          ** 日　期: 2006年3月31日
  13          ** 描　述: 原始版本
  14          **
  15          ********************************************************************************************************/
  16          
  17          #include <reg938.h>
  18          #include <e2prom.h>
  19          
  20          #define MSK_DEECON_FINISH 0x80
  21          
  22          unsigned char readE2prom(unsigned int address)  
  23          {
  24   1        register unsigned char eeprom_value;
  25   1        bit ea_save;  
  26   1        unsigned int temp;
  27   1      
  28   1        temp = address;             
  29   1        temp >>= 8;
  30   1        temp &= 0x0001;               //取得第八位地址数据
  31   1      
  32   1        ea_save = EA;
  33   1        EA=0;
  34   1        DEECON = (unsigned char)temp;       //给DEECON赋值，其中ECTL1＝0，ECTL0＝0，最低位位第八为地址数据
  35   1      
  36   1        temp = address;             
  37   1        temp &= 0x00FF;
  38   1        DEEADR = (unsigned char)temp;       //前七位地址数据写入DEEADR
  39   1      
  40   1        while((DEECON & MSK_DEECON_FINISH) == 0){}    //等待是否读完成
  41   1        
  42   1        DEECON &= 0x7F;
  43   1        eeprom_value = DEEDAT ;  
  44   1        EA=ea_save;               //保存中断状态
  45   1      
  46   1        return eeprom_value;
  47   1      }
  48          
  49          
  50          void writeE2prom(unsigned int address, unsigned char value) 
  51          {
  52   1          bit ea_save;
  53   1        unsigned int temp;
  54   1      
C51 COMPILER V9.51   E2PROM                                                                10/22/2013 09:07:11 PAGE 2   

  55   1        temp = address;
  56   1        temp >>= 8;
  57   1        temp &= 0x0001;             //取得第八位地址数据
  58   1      
  59   1        ea_save = EA;
  60   1        EA=0;
  61   1        DEECON = (unsigned char)temp;     //给DEECON赋值，其中ECTL1＝0，ECTL0＝0，最低位位第八为地址数据
  62   1        
  63   1        DEEDAT = value;             //要写入的数据            
  64   1        
  65   1        temp = address;
  66   1        temp &= 0x00FF;
  67   1        DEEADR = (unsigned char)temp;       //前七位地址数据写入DEEADR  
  68   1        while((DEECON & MSK_DEECON_FINISH) == 0)  //等待是否写完成
  69   1        {
  70   2        } 
  71   1        DEECON &= 0x7F;
  72   1      
  73   1        EA=ea_save;     
  74   1      } 
  75          
  76          void writeE2promStr(unsigned char len_car, unsigned int adr_eeprom, unsigned char *src) 
  77          {
  78   1        unsigned char i;
  79   1      
  80   1        for (i=0; i<len_car; i++)
  81   1        {
  82   2           writeE2prom(adr_eeprom++, src[i]);
  83   2         }  
  84   1      }
  85          
  86          void readE2promStr(unsigned char len_car, unsigned int adr_eeprom, unsigned char *dest) 
  87          {
  88   1        unsigned char i;
  89   1        
  90   1        for (i=0; i<len_car; i++)
  91   1        {
  92   2          *dest++ = readE2prom(adr_eeprom++);
  93   2        }
  94   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    177    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      13
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       2
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
