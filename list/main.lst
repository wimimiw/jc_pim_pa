C51 COMPILER V9.51   MAIN                                                                  10/22/2013 09:07:10 PAGE 1   


C51 COMPILER V9.51, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\OUTPUT\main.obj
COMPILER INVOKED BY: C:\Program Files\Keil\C51\BIN\C51.EXE APP\main.c OPTIMIZE(9,SIZE) REGFILE(.\OUTPUT\test.ORC) BROWSE
                    - INCDIR(.\APP;.\drive;.\LPC900) DEBUG OBJECTEXTEND PRINT(.\list\main.lst) TABS(2) OBJECT(.\OUTPUT\main.obj)

line level    source

   1          
   2          /**-------------文件信息--------------------------------------------------------------------------------
   3          **文   件   名: main.c
   4          **创   建   人: 程莺红
   5          **修   改   人: 
   6          **最后修改日期: 2006年5月15日
   7          **最 新 版  本: V1.3
   8          **描        述: 主函数
   9          **
  10          **--------------历史版本信息----------------------------------------------------------------------------
  11          ** 创建人: 程莺红 
  12          ** 版  本: V1.2
  13          ** 日　期: 2006年3月31日
  14          ** 描　述: 原始版本
  15          **
  16          **--------------历史版本信息----------------------------------------------------------------------------
  17          ** 创建人: 程莺红 
  18          ** 版  本: V1.3
  19          ** 日　期: 2006年5月15日
  20          ** 描　述:1、 增加了串口超时判断；
  21          **
  22          *******************************************************************************************************
  23          
  24          **-------------版本改动信息----------------------------------------------------------------------------
  25          **
  26          ** 
  27          ** 日　期: 2010年5月20日
  28          ** 描　述:1、 增加了衰减器及其相关操作
  29          **
  30          ********************************************************************************************************/
  31          
  32          #define APP_GLOBALS
  33          
  34          #include <reg938.h>
  35          #include <stdio.h>
  36          #include <intrins.h>
  37          #include <string.h>   
  38          #include <SPI.h>
  39          #include <cpu.h>
  40          #include <serial.h>
  41          #include <task.h>
  42          #include <packet.h>
  43          #include <bro20W_RFcontrol.h>
  44          #include <bro20W_RFparam.h>
  45          #include <timer.h>
  46          #include <readad.h>
  47          #include <e2prom.h>
  48          //#include <math.h>
  49          
  50          
  51          
  52          /*
  53          *********************************************************************************************************
  54          *                         主函数
C51 COMPILER V9.51   MAIN                                                                  10/22/2013 09:07:10 PAGE 2   

  55          *
  56          * Description: 初始化系统后，进入主循环，按顺序执行各个任务
  57          *
  58          * Arguments  : 无
  59          *
  60          * Returns    : 无
  61          *********************************************************************************************************
  62          */
  63          void main(void) small
  64          {
  65   1        InitCpu();                  // 和本应用系统相关的初始化
  66   1        InitSerial();               //串口初始化
  67   1        InitSPI();                  //初始化SPI总线
  68   1        InitRF();                 //初始化模块参数
  69   1        InitTimer1();
  70   1        sendInitpacket();
  71   1        DwnldSoft1m_time = getTime();
  72   1      
  73   1        while(1)
  74   1        {   
  75   2          if (getTime()- DwnldSoft1m_time >= DwnldSoftTimeOut)
  76   2          {
  77   3            softDownLoad = UNDO;
  78   3          }
  79   2          TaskRoutine();       //定时执行
  80   2          TaskHandlePkt();    //串口通讯处理
  81   2        }
  82   1      }
  83          /*
  84          *********************************************************************************************************
  85          *                         新包处理任务
  86          *
  87          * Description: 根据邮箱信息做相应处理
  88          *
  89          * Arguments  : 
  90          *        parameter  指针，指向提供给任务的相关参数
  91          *
  92          * Returns    : 无
  93          *********************************************************************************************************
  94          */
  95          void TaskHandlePkt() 
  96          {
  97   1        if(pack_valid == 1)
  98   1        { 
  99   2      
 100   2      //      RDE = 1;
 101   2      //      SM2 = 0;
 102   2      
 103   2          if(ack_flag==0)
 104   2          {
 105   3            watchdog();
 106   3            execute_cmd();            //没有错误则执行相应的命令
 107   3          }
 108   2          if(ack_flag!=0)
 109   2          //else
 110   2          {                   //组织错误包
 111   3            RxBuf[3] = ack_flag;        //置应答标志  
 112   3            Data_len = RxBuf[1] + 2;      //包中的长度＋地址（1字节）＋长度字节本身（1字节）
 113   3          }
 114   2          watchdog();
 115   2      
 116   2          
C51 COMPILER V9.51   MAIN                                                                  10/22/2013 09:07:10 PAGE 3   

 117   2          if(PktHandle2S_time < PktHandleTimeOut)
 118   2          {           //没有超时则发包
 119   3            sendPkt();
 120   3          }
 121   2          else
 122   2          {           //否则设置数据包无效
 123   3            pack_valid = 0;
 124   3          }                         
 125   2        }
 126   1      }
 127          
 128          /*
 129          *********************************************************************************************************
 130          *                         定时执行任务
 131          *
 132          * Description: 在需要时查询各个系统参数，有异常时处理告警信息
 133          *
 134          * Arguments  : 
 135          *        parameter  指针，指向提供给任务的相关参数
 136          *
 137          * Returns    : 无
 138          *********************************************************************************************************
 139          */
 140          void TaskRoutine()
 141          {
 142   1        watchdog();
 143   1        if( softDownLoad == UNDO || softDownLoad == DONE )
 144   1        {
 145   2          if(Task100MS_time < getTime())     //add by  dw 20090603 
 146   2          {
 147   3            Task100MS_time += DELAY100MS;
 148   3            Switch_clock();
 149   3          }
 150   2          if(Task5S_time < getTime())
 151   2          {
 152   3            Task5S_time += DELAY5S;
 153   3            TaskRunPer5s();
 154   3          }
 155   2          if(Task30S_time < getTime())
 156   2          {
 157   3            Task30S_time += DELAY30S;
 158   3            TaskRunPer30s();
 159   3          }
 160   2        }
 161   1      }
 162          
 163          /*
 164          *********************************************************************************************************
 165          *                         定时执行对ADF4350的内外时钟的检测切换 
 166          *
 167          * Description: 在TaskRoutine中调用，每100MS 
 168          *
 169          * Arguments  : 无
 170          *
 171          * Returns    : 无
 172          *********************************************************************************************************
 173          */
 174          void Switch_clock()                  //add by  dw 20090603 
 175          {
 176   1          unsigned int data vcc_in = 0;
 177   1        unsigned char data i;
 178   1        if( softDownLoad != DOING )
C51 COMPILER V9.51   MAIN                                                                  10/22/2013 09:07:10 PAGE 4   

 179   1          {
 180   2            //对AD转换后的电压进行判别，并对P2.6输出一个电平     
 181   2            //watchdog();
 182   2            for( i = 0; i < 8; i++ )
 183   2            {
 184   3              vcc_in += readAD(CHANNEL_2);
 185   3            }
 186   2            AD0CON = 0x01;              //关闭转换，以防止出现的管脚相互影响现象。add by dw   20090623
 187   2            
 188   2            vcc_in >>= 3;
 189   2            
 190   2            if( vcc_in < 62  )              //62 = (0.2  / 3.3) * 2 >>10
 191   2              V33C = 0;
 192   2            else
 193   2              V33C = 1;
 194   2          }
 195   1      }
 196          /*
 197          *********************************************************************************************************
 198          *                         定时执行告警信息更新
 199          *
 200          * Description: 在TaskRoutine中调用，每5秒一次
 201          *
 202          * Arguments  : 无
 203          *
 204          * Returns    : 无
 205          *********************************************************************************************************
 206          */
 207          void TaskRunPer5s()
 208          {
 209   1        if( softDownLoad != DOING )                     //软件下载时
 210   1        {
 211   2          updateAlmInfo();                        //更新告警信息
 212   2        }
 213   1      }
 214          /*
 215          *********************************************************************************************************
 216          *                         定时执行温度补偿    读取温度值
 217          *
 218          * Description: 在TaskRoutine中调用，每30秒一次
 219          *
 220          * Arguments  : 无
 221          *
 222          * Returns    : 无
 223          *********************************************************************************************************
 224          */
 225          void TaskRunPer30s() 
 226          {
 227   1        if( softDownLoad != DOING )             //软件下载时，不发告警
 228   1        {
 229   2                                      //若动作了射频开关，则需要对衰减器和锁相环重新进行操作
 230   2          readTemperatur();               //更新温度记录
 231   2        //  if((rfPramModified == TRUE) || (gpreRfTemp != gcurRfTemp) ) //射频参数更改或温度有变化
 232   2        //  {
 233   2            //tempCompensate();               //温度补偿
 234   2        //  }
 235   2        watchdog();
 236   2        }  
 237   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
C51 COMPILER V9.51   MAIN                                                                  10/22/2013 09:07:10 PAGE 5   

   CODE SIZE        =    281    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =    371    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     40    ----
   IDATA SIZE       =     22    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
