C51 COMPILER V7.06   MAIN                                                                  04/24/2006 10:56:53 PAGE 1   


C51 COMPILER V7.06, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\OUTPUT\main.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE APP\main.c BROWSE INCDIR(.\APP;.\drive;.\LPC900) DEBUG OBJECTEXTEND PRINT(.
                    -\list\main.lst) OBJECT(.\OUTPUT\main.obj)

stmt level    source

   1          
   2          /**-------------文件信息--------------------------------------------------------------------------------
   3          **文   件   名: main.c
   4          **创   建   人: 程莺红
   5          **修   改   人: 
   6          **最后修改日期: 2006年3月31日
   7          **最 新 版  本: V1.2
   8          **描        述: 主函数
   9          **
  10          **--------------历史版本信息----------------------------------------------------------------------------
  11          ** 创建人: 程莺红 
  12          ** 版  本: V1.2
  13          ** 日　期: 2006年3月31日
  14          ** 描　述: 原始版本
  15          **
  16          ********************************************************************************************************/
  17          
  18          #define APP_GLOBALS
  19          
  20          #include <reg938.h>
  21          #include <stdio.h>
  22          #include <intrins.h>
  23          #include <string.h>       
  24          #include <SPI.h>
  25          #include <cpu.h>
  26          #include <serial.h>
  27          #include <task.h>
  28          #include <packet.h>
  29          #include <bro20W_RFcontrol.h>
  30          #include <bro20W_RFparam.h>
  31          #include <timer.h>
  32          #include <readad.h>
  33          #include <e2prom.h>
  34          
  35          
  36          
  37          /*
  38          *********************************************************************************************************
  39          *                         主函数
  40          *
  41          * Description: 初始化系统后，进入主循环，按顺序执行各个任务
  42          *
  43          * Arguments  : 无
  44          *
  45          * Returns    : 无
  46          *********************************************************************************************************
  47          */
  48          void main(void) small
  49          {
  50   1              InitCpu();                                                                      // 和本应用系统相关的初始化
  51   1              InitSerial();                                                           //串口初始化
  52   1          InitSPI();                                                                  //初始化SPI总线
  53   1              InitRF();                                                                       //初始化模块参数
  54   1              InitTimer1();
C51 COMPILER V7.06   MAIN                                                                  04/24/2006 10:56:53 PAGE 2   

  55   1              sendInitpacket();
  56   1      
  57   1              while(1)
  58   1              {
  59   2                      TaskRoutine();
  60   2                      TaskHandlePkt();
  61   2              }
  62   1      }
  63          
  64          /*
  65          *********************************************************************************************************
  66          *                         新包处理任务
  67          *
  68          * Description: 根据邮箱信息做相应处理
  69          *
  70          * Arguments  : 
  71          *                          parameter    指针，指向提供给任务的相关参数
  72          *
  73          * Returns    : 无
  74          *********************************************************************************************************
  75          */
  76          void TaskHandlePkt() 
  77          {
  78   1              if(pack_valid == 1)
  79   1              {       
  80   2                      if(ack_flag==0)
  81   2                      {
  82   3                              watchdog();
  83   3                              execute_cmd();                                          //没有错误则执行相应的命令
  84   3                      }
  85   2      
  86   2                      if(ack_flag!=0)
  87   2                      {                                                                               //组织错误包
  88   3                              RxBuf[3] = ack_flag;                            //置应答标志    
  89   3                              Data_len = RxBuf[1] + 2;                        //包中的长度＋地址（1字节）＋长度字节本身（1字节）
  90   3                      }
  91   2                      watchdog();
  92   2                      sendPkt();                                                      
  93   2              }
  94   1      }
  95          
  96          /*
  97          *********************************************************************************************************
  98          *                         定时执行任务
  99          *
 100          * Description: 在需要时查询各个系统参数，有异常时处理告警信息
 101          *
 102          * Arguments  : 
 103          *                          parameter    指针，指向提供给任务的相关参数
 104          *
 105          * Returns    : 无
 106          *********************************************************************************************************
 107          */
 108          void TaskRoutine()
 109          {
 110   1              watchdog();
 111   1              if( softDownLoad == UNDO || softDownLoad == DONE )
 112   1              {
 113   2                      if(Task5S_time < getTime())
 114   2                      {
 115   3                              Task5S_time += DELAY5S;
 116   3                              TaskRunPer5s();
C51 COMPILER V7.06   MAIN                                                                  04/24/2006 10:56:53 PAGE 3   

 117   3                      }
 118   2                      if(Task30S_time < getTime())
 119   2                      {
 120   3                         Task30S_time += DELAY30S;
 121   3                         TaskRunPer30s();
 122   3                      }
 123   2              }
 124   1      }
 125          /*
 126          *********************************************************************************************************
 127          *                         定时执行告警信息更新
 128          *
 129          * Description: 在TaskRoutine中调用，每5秒一次
 130          *
 131          * Arguments  : 无
 132          *
 133          * Returns    : 无
 134          *********************************************************************************************************
 135          */
 136          void TaskRunPer5s()
 137          {
 138   1              if( softDownLoad != DOING )                                                                                     //软件下载时
 139   1              {
 140   2                      updateAlmInfo();                                                                                                //更新告警信息
 141   2              }
 142   1      }
 143          /*
 144          *********************************************************************************************************
 145          *                         定时执行温度补偿
 146          *
 147          * Description: 在TaskRoutine中调用，每30秒一次
 148          *
 149          * Arguments  : 无
 150          *
 151          * Returns    : 无
 152          *********************************************************************************************************
 153          */
 154          void TaskRunPer30s() 
 155          {
 156   1              unsigned char bus;
 157   1              if( softDownLoad != DOING )                                                     //软件下载时，不发告警
 158   1              {
 159   2                      //if(PLL_state==1)
 160   2                      //{
 161   2                              watchdog();
 162   2                              if((gRF_No&0xF0)==0)                                                    //取得通道号，上行or下行
 163   2                              {
 164   3                                      bus = 0;
 165   3                              }
 166   2                              else
 167   2                              {
 168   3                                      bus = 1;
 169   3                              }  
 170   2                              writeAttenuator(bus,gAtteVal);
 171   2                              writePLL();     
 172   2                              watchdog();
 173   2                      //}      
 174   2                      readTemperatur();                                                               //更新温度记录
 175   2                      watchdog();
 176   2                      tempCompensate();                                                               //温度补偿
 177   2                      watchdog();
 178   2              }  
C51 COMPILER V7.06   MAIN                                                                  04/24/2006 10:56:53 PAGE 4   

 179   1      }
 180          
 181          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    223    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =    410    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     37       1
   IDATA SIZE       =      4    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
